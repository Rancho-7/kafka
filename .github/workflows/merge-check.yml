name: Client and Streams Tests

on:
  push:
    branches:
      - CI-TEST2

jobs:
  test-modules:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 11 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: Test client and streams modules
        run: |
          {
            # Run tests first
            ./gradlew :clients:test :streams:test --no-scan
          
            # Output summary header
            echo "# Test Summary"
            echo
          
            # Client Module Tests
            echo "## Client Module Tests"
            total=$(ls -1 clients/build/test-results/test/TEST-*.xml 2>/dev/null | wc -l)
            failed=$(grep -l "<failure" clients/build/test-results/test/TEST-*.xml 2>/dev/null | wc -l)
            skipped=$(grep -l "<skipped" clients/build/test-results/test/TEST-*.xml 2>/dev/null | wc -l)
            echo "Total tests: ${total}, Failed: ${failed}, Skipped: ${skipped}"
            echo
          
            # Streams Module Tests
            echo "## Streams Module Tests"
            total=$(ls -1 streams/build/test-results/test/TEST-*.xml 2>/dev/null | wc -l)
            failed=$(grep -l "<failure" streams/build/test-results/test/TEST-*.xml 2>/dev/null | wc -l)
            skipped=$(grep -l "<skipped" streams/build/test-results/test/TEST-*.xml 2>/dev/null | wc -l)
            echo "Total tests: ${total}, Failed: ${failed}, Skipped: ${skipped}"
            echo
          
            # Gradle Builds Table
            echo "## Gradle Builds"
            echo
            echo "| Root Project | Requested Tasks | Gradle Version | Build Outcome | Build Scan |"
            echo "| ------------ | --------------- | -------------- | ------------- | ---------- |"
          
            # Get Gradle version and build outcome
            version=$(./gradlew --version | grep "Gradle" | cut -d' ' -f2)
            if [ $? -eq 0 ]; then
              outcome="✅"
            else
              outcome="❌"
            fi
          
            echo "| kafka | :clients:test :streams:test | ${version} | ${outcome} | NOT PUBLISHED |"
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-java${{ matrix.java }}
          path: |
            clients/build/reports/tests/
            streams/build/reports/tests/
          compression-level: 9
          if-no-files-found: ignore