name: Client and Streams Tests

on:
  push:
    branches:
      - CI-TEST2

jobs:
  test-modules:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 11 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: Run tests
        run: |
          # 记录开始时间
          start_time=$(date +%s)
          ./gradlew :clients:test :streams:test --no-scan > test_output.log 2>&1 || echo "Tests failed"
          # 记录结束时间并计算总耗时
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          # 转换为分钟和秒
          minutes=$((duration / 60))
          seconds=$((duration % 60))
          echo "TOTAL_DURATION=${minutes}m ${seconds}s" >> $GITHUB_ENV

      - name: Generate test summary
        run: |
          {
            # 设置测试结果目录变量
            CLIENTS_DIR="clients/build/test-results/test"
            STREAMS_DIR="streams/build/test-results/test"
          
            # 计算 Client 模块的统计数据
            CLIENT_TOTAL=$(find ${CLIENTS_DIR} -name "TEST-*.xml" -exec grep "<testcase" {} \; | wc -l)
            CLIENT_FAILED=$(find ${CLIENTS_DIR} -name "TEST-*.xml" -exec grep "<failure" {} \; | wc -l)
            CLIENT_SKIPPED=$(find ${CLIENTS_DIR} -name "TEST-*.xml" -exec grep "<skipped" {} \; | wc -l)
          
            # 改进的 flaky 测试识别
            CLIENT_FLAKY=$(find ${CLIENTS_DIR} -name "TEST-*.xml" -exec grep -l -E 'class=".*\.Flaky.*Test|@Flaky|flaky="true"' {} \; | xargs -r grep "<testcase" 2>/dev/null | wc -l)
          
            # 识别 quarantined 测试
            CLIENT_QUARANTINED=$(find ${CLIENTS_DIR} -name "TEST-*.xml" -exec grep -l -E 'class=".*\.Quarantined.*Test|@Quarantine|quarantined="true"' {} \; | xargs -r grep "<testcase" 2>/dev/null | wc -l)
          
            # 计算 Streams 模块的统计数据
            STREAMS_TOTAL=$(find ${STREAMS_DIR} -name "TEST-*.xml" -exec grep "<testcase" {} \; | wc -l)
            STREAMS_FAILED=$(find ${STREAMS_DIR} -name "TEST-*.xml" -exec grep "<failure" {} \; | wc -l)
            STREAMS_SKIPPED=$(find ${STREAMS_DIR} -name "TEST-*.xml" -exec grep "<skipped" {} \; | wc -l)
          
            # 改进的 flaky 测试识别
            STREAMS_FLAKY=$(find ${STREAMS_DIR} -name "TEST-*.xml" -exec grep -l -E 'class=".*\.Flaky.*Test|@Flaky|flaky="true"' {} \; | xargs -r grep "<testcase" 2>/dev/null | wc -l)
          
            # 识别 quarantined 测试
            STREAMS_QUARANTINED=$(find ${STREAMS_DIR} -name "TEST-*.xml" -exec grep -l -E 'class=".*\.Quarantined.*Test|@Quarantine|quarantined="true"' {} \; | xargs -r grep "<testcase" 2>/dev/null | wc -l)
          
            # 输出格式化的摘要
            echo "# Test Summary"
            echo
            echo "Total time: ${{ env.TOTAL_DURATION }}"
            echo
            echo "## Client Module Tests"
            echo "${CLIENT_TOTAL} tests cases run"
            echo "${CLIENT_FAILED} Failed, ${CLIENT_FLAKY} Flaky, ${CLIENT_SKIPPED} Skipped, ${CLIENT_QUARANTINED} Quarantined, and 0 errors"
            echo
            echo "## Streams Module Tests"
            echo "${STREAMS_TOTAL} tests cases run"
            echo "${STREAMS_FAILED} Failed, ${STREAMS_FLAKY} Flaky, ${STREAMS_SKIPPED} Skipped, ${STREAMS_QUARANTINED} Quarantined, and 0 errors"
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-java${{ matrix.java }}
          path: |
            clients/build/reports/tests/
            streams/build/reports/tests/
          compression-level: 9
          if-no-files-found: ignore