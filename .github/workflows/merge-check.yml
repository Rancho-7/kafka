name: Client and Streams Tests

on:
  push:
    branches:
      - CI-TEST2

jobs:
  test-modules:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 11 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: Run Tests
        id: run-tests
        run: |
          # 记录开始时间
          start_time=$(date +%s)
          
          ./gradlew :clients:test :streams:test \
            --no-daemon \
            --build-cache \
            --continue \
            -PtestLoggingEvents=started,passed,skipped,failed \
            -PmaxParallelForks=2 \
            -PmaxTestRetries=1 \
            -PmaxTestRetryFailures=3
          
          # 计算持续时间并格式化
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          
          hours=$((duration / 3600))
          minutes=$(( (duration % 3600) / 60 ))
          seconds=$((duration % 60))
          
          if [ $hours -gt 0 ]; then
            duration_str="${hours}h${minutes}m${seconds}s"
          else
            duration_str="${minutes}m${seconds}s"
          fi
          
          echo "TOTAL_DURATION=$duration_str" >> $GITHUB_ENV

      - name: Generate Test Summary
        if: always()
        run: |
            {
              if find . -path "*/build/test-results/test" -type d | grep -q .; then
                # Basic test counts
                TOTAL_TESTS=$(find . -path "*/build/test-results/test/TEST-*.xml" -type f -exec grep -c "<testcase" {} \; | awk '{sum += $1} END {print sum}')
                TOTAL_FAILED=$(find . -path "*/build/test-results/test/TEST-*.xml" -type f -exec grep -c "<failure" {} \; | awk '{sum += $1} END {print sum}')
                TOTAL_SKIPPED=$(find . -path "*/build/test-results/test/TEST-*.xml" -type f -exec grep -c "<skipped" {} \; | awk '{sum += $1} END {print sum}')
                TOTAL_ERRORS=$(find . -path "*/build/test-results/test/TEST-*.xml" -type f -exec grep -c "<error" {} \; | awk '{sum += $1} END {print sum}')
            
                # Improved quarantined test detection
                TOTAL_QUARANTINED=$(find . -name "*.java" -type f -exec grep -l "@Quarantined" {} \; | wc -l)
            
                # Calculate passed tests
                TOTAL_PASSED=$((TOTAL_TESTS - TOTAL_FAILED - TOTAL_SKIPPED - TOTAL_QUARANTINED))
            
                echo "${TOTAL_TESTS} tests cases run in ${{ env.TOTAL_DURATION }}."
                echo
                echo "${TOTAL_PASSED} PASSED ✅, ${TOTAL_FAILED} FAILED ❌, 0 FLAKY ⚠️, ${TOTAL_SKIPPED} SKIPPED 🙈, ${TOTAL_QUARANTINED} QUARANTINED 😷, and ${TOTAL_ERRORS} errors."
              else
                echo "No test results found."
              fi
            } >> $GITHUB_STEP_SUMMARY

      - name: List Quarantined Tests
        if: always()
        run: |
            echo "Quarantined Tests:"
            find . -name "*.java" -type f -exec grep -B 1 -A 1 "@Quarantined" {} \; || true
          - name: Report Failed Tests
            if: always()  # Make sure this runs even if tests fail
            run: |
              echo "Failed Tests:"
              find . -path "*/build/test-results/test/TEST-*.xml" -type f -exec grep -l "<failure" {} \; | \
              while read file; do
                classname=$(grep "classname=" "$file" | head -1 | sed 's/.*classname="\([^"]*\)".*/\1/')
                testname=$(grep "testcase name=" "$file" | head -1 | sed 's/.*name="\([^"]*\)".*/\1/')
                echo "- $classname :: $testname"
              done

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-java${{ matrix.java }}
          path: |
            **/build/reports/tests/
            **/build/test-results/
          compression-level: 9
          if-no-files-found: ignore