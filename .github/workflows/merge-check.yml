name: Client and Streams Tests

on:
  push:
    branches:
      - CI-TEST2

jobs:
  test-modules:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 11 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: Test client and streams modules
        id: gradle-test
        run: |
          {
            echo "# Test Summary"
            echo
            echo "## Client Module Tests"
          
            # Run tests and capture output
            ./gradlew :clients:test :streams:test --no-scan --console=plain | tee gradle_output.log
          
            CLIENT_TOTAL=$(find clients/build/test-results/test -name "TEST-*.xml" -exec grep -l "<testcase" {} \; | xargs cat | grep -c "<testcase" || echo "0")
            CLIENT_FAILED=$(find clients/build/test-results/test -name "TEST-*.xml" -exec grep -l "<failure" {} \; | xargs cat 2>/dev/null | grep -c "<failure" || echo "0")
            CLIENT_SKIPPED=$(find clients/build/test-results/test -name "TEST-*.xml" -exec grep -l "<skipped" {} \; | xargs cat 2>/dev/null | grep -c "<skipped" || echo "0")
            echo "Total tests: ${CLIENT_TOTAL}, Failed: ${CLIENT_FAILED}, Skipped: ${CLIENT_SKIPPED}"
          
            echo
            echo "## Streams Module Tests"
            STREAMS_TOTAL=$(find streams/build/test-results/test -name "TEST-*.xml" -exec grep -l "<testcase" {} \; | xargs cat | grep -c "<testcase" || echo "0")
            STREAMS_FAILED=$(find streams/build/test-results/test -name "TEST-*.xml" -exec grep -l "<failure" {} \; | xargs cat 2>/dev/null | grep -c "<failure" || echo "0")
            STREAMS_SKIPPED=$(find streams/build/test-results/test -name "TEST-*.xml" -exec grep -l "<skipped" {} \; | xargs cat 2>/dev/null | grep -c "<skipped" || echo "0")
            echo "Total tests: ${STREAMS_TOTAL}, Failed: ${STREAMS_FAILED}, Skipped: ${STREAMS_SKIPPED}"
          
            echo
            echo "## Gradle Builds"
            echo
            echo "| Root Project | Requested Tasks | Gradle Version | Build Outcome | Build Scan |"
            echo "| ------------ | --------------- | -------------- | ------------- | ---------- |"
          
            # Determine build outcome
            if grep -q "BUILD SUCCESSFUL" gradle_output.log; then
              OUTCOME="✅"
            else
              OUTCOME="❌"
            fi
          
            # Get Gradle version
            GRADLE_VERSION=$(./gradlew --version | grep "Gradle " | cut -d' ' -f2)
            echo "| kafka | :clients:test :streams:test | $GRADLE_VERSION | $OUTCOME | NOT PUBLISHED |"
          
            echo
            echo "### Caching for gradle-build-action was enabled - expand for details"
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-java${{ matrix.java }}
          path: |
            clients/build/reports/tests/
            streams/build/reports/tests/
          compression-level: 9
          if-no-files-found: ignore